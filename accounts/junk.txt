from ast import Pass
from django.db import models
from django.contrib.auth.models import AbstractBaseUser, PermissionsMixin, BaseUserManager
from django.forms import BooleanField
from django.utils.translation import gettext_lazy as _
# Create your models here.


class UserManager(BaseUserManager):
    def create_superuser(self,email,user_name,first_name,password, **other_fields):
            other_fields.setdefault('is_staff', True)
            other_fields.setdefault('is_superuser', True)
            other_fields.setdefault('is_active', True)

            if other_fields.get('is_staff') is not True:
                raise ValueError('super user must be assigned is_staff value of True')
            if other_fields.get('is_superuser') is not True:
                raise ValueError('super user must be assigned is_superuser value of True')
            if other_fields.get('is_active') is not True:
                raise ValueError('super user must be assigned is_active value of True')
            
            return self.create_user(email, user_name, first_name, password, **other_fields)

    def create_user(self, email, user_name, password, first_name, **other_fields):
        if not email:
            raise ValueError(_('provide an email'))
        email = self.normalize_email(email)
        user = self.model(email=email, user_name=user_name, first_name=first_name **other_fields)
        user.set_password(password)
        user.save()
        return user
    
  

    def create_publisher(self, email, user_name, first_name, password, **otherfields):
        if not email:
            raise ValueError(_('provide an email'))
        email = self.normalize_email(email)
        user = self.model(email=email, user_name=user_name, **otherfields)
        user.set_password(password)
        user.save()
        return user


class ProductUser(AbstractBaseUser, PermissionsMixin):
    email = models.EmailField(_('email address'), unique=True)
    user_name = models.CharField(max_length=15, unique=True)
    first_name = models.CharField(max_length=20, blank=True)
    last_name = models.CharField(max_length=20)
    is_staff = models.BooleanField(default=False)
    is_active = models.BooleanField(default=False)

    objects = UserManager()
    USERNAME_FIELD = "email"
    REQUIRED_FIELDS = ['user_name', 'first_name']
    
    
    def __str__(self):
        return self.user_name